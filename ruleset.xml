<?xml version="1.0"?>
<ruleset name="MessageCloud Coding Standard">
    <description>MessageCloud PHP Coding Standard. Essentially PSR2 with some modifications.</description>

    <arg name="colors"/>
    <arg value="p"/>

    <!-- PSR2 extends PSR1 -->
    <rule ref="PSR2"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!--Extend the line length warning and error to 130 characters -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="130"/>
            <property name="absoluteLineLimit" value="130"/>
        </properties>
    </rule>

    <!--
    We exclude the PSR2 Use Declaration rule as it clashes with PHP7 style grouped Use statements.
    This is supposedly being fixed in a proposed PSR (https://github.com/php-fig/fig-standards/blob/master/proposed/extended-coding-style-guide.md)
    so we'll keep our eye on this.
     -->
    <rule ref="PSR2.Namespaces.UseDeclaration">
        <exclude-pattern>*</exclude-pattern>
    </rule>

    <!-- Force whitespace after a type cast -->
    <rule ref="Generic.Formatting.SpaceAfterCast"/>

    <!-- Forbid short open tag -->
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>

    <!-- Require comma after last element in multi-line array -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

    <!-- Require presence of constant visibility -->
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility">
        <properties>
            <property name="fixable" type="boolean" value="true"/>
        </properties>
    </rule>

    <!-- Require usage of null coalesce operator when possible -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>

    <!-- Forbid useless unreachable catch blocks -->
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>

    <!-- Forbid unused use statements -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" type="boolean" value="true"/>
        </properties>
    </rule>

    <!-- Forbid superfluous leading backslash in use statements -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>

    <!-- Require empty newlines before and after uses -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
        <properties>
            <property name="linesCountAfterLastUse" value="1"/>
            <property name="linesCountBeforeFirstUse" value="1"/>
            <property name="linesCountBetweenUseTypes" value="0"/>
        </properties>
    </rule>

    <!-- Forbid using absolute class name references (except global ones) -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="allowFallbackGlobalConstants" type="boolean" value="true"/>
            <property name="allowFallbackGlobalFunctions" type="boolean" value="true"/>
            <property name="allowFullyQualifiedGlobalClasses" type="boolean" value="false"/>
            <property name="allowFullyQualifiedGlobalConstants" type="boolean" value="false"/>
            <property name="allowFullyQualifiedGlobalFunctions" type="boolean" value="false"/>
            <property name="allowFullyQualifiedNameForCollidingClasses" type="boolean" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingConstants" type="boolean" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingFunctions" type="boolean" value="true"/>
            <property name="searchAnnotations" type="boolean" value="false"/>
        </properties>
    </rule>

    <!-- Require presence of declare(strict_types=1) -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property
                    name="newlinesCountBetweenOpenTagAndDeclare"
                    value="2"
            />
            <property
                    name="spacesCountAroundEqualsSign"
                    value="0"
            />
            <property
                    name="newlinesCountAfterDeclare"
                    value="1"
            />
        </properties>
    </rule>

    <!-- Require one space between typehint and variable, require no space between nullability sign and typehint -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
</ruleset>